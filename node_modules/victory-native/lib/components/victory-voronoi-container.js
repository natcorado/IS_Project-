"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.VictoryVoronoiContainer = void 0;
var _react = _interopRequireDefault(require("react"));
var _victoryVoronoiContainer = require("victory-voronoi-container");
var _victoryContainer = require("./victory-container");
var _victoryTooltip = require("./victory-tooltip");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
/* eslint-disable react/no-multi-comp */

const DEFAULT_VORONOI_PADDING = 5;
const VictoryVoronoiContainer = initialProps => {
  const props = (0, _victoryVoronoiContainer.useVictoryVoronoiContainer)({
    ...initialProps,
    activateData: initialProps.activateData ?? true,
    activateLabels: initialProps.activateLabels ?? true,
    labelComponent: initialProps.labelComponent ?? /*#__PURE__*/_react.default.createElement(_victoryTooltip.VictoryTooltip, null),
    voronoiPadding: initialProps.voronoiPadding ?? DEFAULT_VORONOI_PADDING
  });
  return /*#__PURE__*/_react.default.createElement(_victoryContainer.VictoryContainer, props);
};
exports.VictoryVoronoiContainer = VictoryVoronoiContainer;
VictoryVoronoiContainer.role = "container";
VictoryVoronoiContainer.defaultEvents = initialProps => {
  const props = {
    ..._victoryVoronoiContainer.VICTORY_VORONOI_CONTAINER_DEFAULT_PROPS,
    ...initialProps
  };
  const createEventHandler = (handler, disabled) =>
  // eslint-disable-next-line max-params
  (event, targetProps, eventKey, context) => disabled || props.disable ? {} : handler(event, {
    ...props,
    ...targetProps
  }, eventKey, context);
  return [{
    target: "parent",
    eventHandlers: {
      onTouchStart: createEventHandler(_victoryVoronoiContainer.VoronoiHelpers.onMouseMove),
      onTouchMove: createEventHandler(_victoryVoronoiContainer.VoronoiHelpers.onMouseMove),
      onTouchEnd: createEventHandler(_victoryVoronoiContainer.VoronoiHelpers.onMouseLeave)
    }
  }, {
    target: "data",
    eventHandlers: props.disable ? {} : {
      onTouchStart: () => null,
      onTouchMove: () => null,
      onTouchEnd: () => null
    }
  }];
};