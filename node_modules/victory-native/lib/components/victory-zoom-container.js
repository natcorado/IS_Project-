"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.VictoryZoomContainer = void 0;
var _react = _interopRequireDefault(require("react"));
var _victoryContainer = require("./victory-container");
var _victoryClipContainer = require("./victory-clip-container");
var _victoryZoomContainer = require("victory-zoom-container");
var _nativeZoomHelpers = _interopRequireDefault(require("../helpers/native-zoom-helpers"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const VictoryZoomContainer = initialProps => {
  const props = (0, _victoryZoomContainer.useVictoryZoomContainer)({
    ...initialProps,
    clipContainerComponent: initialProps.clipContainerComponent ?? /*#__PURE__*/_react.default.createElement(_victoryClipContainer.VictoryClipContainer, null)
  });
  return /*#__PURE__*/_react.default.createElement(_victoryContainer.VictoryContainer, props);
};
exports.VictoryZoomContainer = VictoryZoomContainer;
VictoryZoomContainer.role = "container";
VictoryZoomContainer.defaultEvents = initialProps => {
  const props = {
    ..._victoryZoomContainer.VICTORY_ZOOM_CONTAINER_DEFAULT_PROPS,
    ...initialProps
  };
  const createEventHandler = (handler, disabled) =>
  // eslint-disable-next-line max-params
  (event, targetProps, eventKey, context) => disabled || props.disable ? {} : handler(event, {
    ...props,
    ...targetProps
  }, eventKey, context);
  return [{
    target: "parent",
    eventHandlers: {
      onTouchStart: createEventHandler(_nativeZoomHelpers.default.onTouchStart),
      onTouchMove: createEventHandler(_nativeZoomHelpers.default.onTouchMove),
      onTouchEnd: createEventHandler(_nativeZoomHelpers.default.onTouchEnd),
      onTouchPinch: createEventHandler(_nativeZoomHelpers.default.onTouchPinch)
    }
  }];
};